/*
 * generated by Xtext 2.35.0
 */
grammar InternalProjectsLang;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.fame.projects.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.fame.projects.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.fame.projects.services.ProjectsLangGrammarAccess;

}
@parser::members {
	private ProjectsLangGrammarAccess grammarAccess;

	public void setGrammarAccess(ProjectsLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProject
entryRuleProject
:
{ before(grammarAccess.getProjectRule()); }
	 ruleProject
{ after(grammarAccess.getProjectRule()); } 
	 EOF 
;

// Rule Project
ruleProject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectAccess().getGroup()); }
		(rule__Project__Group__0)
		{ after(grammarAccess.getProjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePerson
entryRulePerson
:
{ before(grammarAccess.getPersonRule()); }
	 rulePerson
{ after(grammarAccess.getPersonRule()); } 
	 EOF 
;

// Rule Person
rulePerson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPersonAccess().getGroup()); }
		(rule__Person__Group__0)
		{ after(grammarAccess.getPersonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEffort
entryRuleEffort
:
{ before(grammarAccess.getEffortRule()); }
	 ruleEffort
{ after(grammarAccess.getEffortRule()); } 
	 EOF 
;

// Rule Effort
ruleEffort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEffortAccess().getGroup()); }
		(rule__Effort__Group__0)
		{ after(grammarAccess.getEffortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTasksAssignment_5_0()); }
		(rule__Project__TasksAssignment_5_0)
		{ after(grammarAccess.getProjectAccess().getTasksAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getProjectAccess().getPeopleAssignment_5_1()); }
		(rule__Project__PeopleAssignment_5_1)
		{ after(grammarAccess.getProjectAccess().getPeopleAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__0__Impl
	rule__Project__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
	'project'
	{ after(grammarAccess.getProjectAccess().getProjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__1__Impl
	rule__Project__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getTitleAssignment_1()); }
	(rule__Project__TitleAssignment_1)
	{ after(grammarAccess.getProjectAccess().getTitleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__2__Impl
	rule__Project__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getDescribedKeyword_2()); }
	'described'
	{ after(grammarAccess.getProjectAccess().getDescribedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__3__Impl
	rule__Project__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getAsKeyword_3()); }
	'as'
	{ after(grammarAccess.getProjectAccess().getAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__4__Impl
	rule__Project__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getDescriptionAssignment_4()); }
	(rule__Project__DescriptionAssignment_4)
	{ after(grammarAccess.getProjectAccess().getDescriptionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Project__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectAccess().getAlternatives_5()); }
	(rule__Project__Alternatives_5)*
	{ after(grammarAccess.getProjectAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTitleAssignment_1()); }
	(rule__Task__TitleAssignment_1)
	{ after(grammarAccess.getTaskAccess().getTitleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getTaskAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getMonthKeyword_3()); }
	'month'
	{ after(grammarAccess.getTaskAccess().getMonthKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getStartAssignment_4()); }
	(rule__Task__StartAssignment_4)
	{ after(grammarAccess.getTaskAccess().getStartAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getForKeyword_5()); }
	'for'
	{ after(grammarAccess.getTaskAccess().getForKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
	rule__Task__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getDurationAssignment_6()); }
	(rule__Task__DurationAssignment_6)
	{ after(grammarAccess.getTaskAccess().getDurationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__7__Impl
	rule__Task__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getMonthsKeyword_7()); }
	'months'
	{ after(grammarAccess.getTaskAccess().getMonthsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__8__Impl
	rule__Task__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getInvolvesKeyword_8()); }
	'involves'
	{ after(grammarAccess.getTaskAccess().getInvolvesKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__9__Impl
	rule__Task__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getEffortAssignment_9()); }
	(rule__Task__EffortAssignment_9)
	{ after(grammarAccess.getTaskAccess().getEffortAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_10()); }
	(rule__Task__Group_10__0)*
	{ after(grammarAccess.getTaskAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_10__0__Impl
	rule__Task__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getAndKeyword_10_0()); }
	'and'
	{ after(grammarAccess.getTaskAccess().getAndKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getEffortAssignment_10_1()); }
	(rule__Task__EffortAssignment_10_1)
	{ after(grammarAccess.getTaskAccess().getEffortAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Person__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__0__Impl
	rule__Person__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
	'person'
	{ after(grammarAccess.getPersonAccess().getPersonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Person__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPersonAccess().getNameAssignment_1()); }
	(rule__Person__NameAssignment_1)
	{ after(grammarAccess.getPersonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Effort__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effort__Group__0__Impl
	rule__Effort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffortAccess().getPersonAssignment_0()); }
	(rule__Effort__PersonAssignment_0)
	{ after(grammarAccess.getEffortAccess().getPersonAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effort__Group__1__Impl
	rule__Effort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffortAccess().getWorksKeyword_1()); }
	'works'
	{ after(grammarAccess.getEffortAccess().getWorksKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effort__Group__2__Impl
	rule__Effort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffortAccess().getForKeyword_2()); }
	'for'
	{ after(grammarAccess.getEffortAccess().getForKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effort__Group__3__Impl
	rule__Effort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffortAccess().getPercentageAssignment_3()); }
	(rule__Effort__PercentageAssignment_3)
	{ after(grammarAccess.getEffortAccess().getPercentageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Effort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEffortAccess().getPercentSignKeyword_4()); }
	'%'
	{ after(grammarAccess.getEffortAccess().getPercentSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Project__TitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__DescriptionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__TasksAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getTasksTaskParserRuleCall_5_0_0()); }
		ruleTask
		{ after(grammarAccess.getProjectAccess().getTasksTaskParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Project__PeopleAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectAccess().getPeoplePersonParserRuleCall_5_1_0()); }
		rulePerson
		{ after(grammarAccess.getProjectAccess().getPeoplePersonParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTaskAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__StartAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getStartINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getStartINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__DurationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getDurationINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__EffortAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getEffortEffortParserRuleCall_9_0()); }
		ruleEffort
		{ after(grammarAccess.getTaskAccess().getEffortEffortParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__EffortAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getEffortEffortParserRuleCall_10_1_0()); }
		ruleEffort
		{ after(grammarAccess.getTaskAccess().getEffortEffortParserRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Person__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPersonAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__PersonAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffortAccess().getPersonPersonCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEffortAccess().getPersonPersonIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEffortAccess().getPersonPersonIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEffortAccess().getPersonPersonCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Effort__PercentageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEffortAccess().getPercentageINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getEffortAccess().getPercentageINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
